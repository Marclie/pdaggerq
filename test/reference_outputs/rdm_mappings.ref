T2 mappings
T1 mappings
Q -> D
G -> D

    // normal-ordered strings:
    //     -     1.00000000000000 i* j* l m d(k,n) 
    //     +     1.00000000000000 n* k d(i,l) d(j,m) 
    //     -     1.00000000000000 j* n* k m d(i,l) 
    //     -     1.00000000000000 n* k d(i,m) d(j,l) 
    //     +     1.00000000000000 j* n* k l d(i,m) 
    //     +     1.00000000000000 i* n* k m d(j,l) 
    //     -     1.00000000000000 i* n* k l d(j,m) 


    // normal-ordered strings:
    //     +     1.00000000000000 d(i,l) d(j,m) d(k,n) 
    //     -     1.00000000000000 k* n d(i,l) d(j,m) 
    //     -     1.00000000000000 d(i,l) d(j,n) d(k,m) 
    //     +     1.00000000000000 k* m d(i,l) d(j,n) 
    //     +     1.00000000000000 j* n d(i,l) d(k,m) 
    //     -     1.00000000000000 j* m d(i,l) d(k,n) 
    //     -     1.00000000000000 j* k* m n d(i,l) 
    //     -     1.00000000000000 d(i,m) d(j,l) d(k,n) 
    //     +     1.00000000000000 k* n d(i,m) d(j,l) 
    //     +     1.00000000000000 d(i,m) d(j,n) d(k,l) 
    //     -     1.00000000000000 k* l d(i,m) d(j,n) 
    //     -     1.00000000000000 j* n d(i,m) d(k,l) 
    //     +     1.00000000000000 j* l d(i,m) d(k,n) 
    //     +     1.00000000000000 j* k* l n d(i,m) 
    //     +     1.00000000000000 d(i,n) d(j,l) d(k,m) 
    //     -     1.00000000000000 k* m d(i,n) d(j,l) 
    //     -     1.00000000000000 d(i,n) d(j,m) d(k,l) 
    //     +     1.00000000000000 k* l d(i,n) d(j,m) 
    //     +     1.00000000000000 j* m d(i,n) d(k,l) 
    //     -     1.00000000000000 j* l d(i,n) d(k,m) 
    //     -     1.00000000000000 j* k* l m d(i,n) 
    //     -     1.00000000000000 i* n d(j,l) d(k,m) 
    //     +     1.00000000000000 i* m d(j,l) d(k,n) 
    //     +     1.00000000000000 i* k* m n d(j,l) 
    //     +     1.00000000000000 i* n d(j,m) d(k,l) 
    //     -     1.00000000000000 i* l d(j,m) d(k,n) 
    //     -     1.00000000000000 i* k* l n d(j,m) 
    //     -     1.00000000000000 i* m d(j,n) d(k,l) 
    //     +     1.00000000000000 i* l d(j,n) d(k,m) 
    //     +     1.00000000000000 i* k* l m d(j,n) 
    //     -     1.00000000000000 i* j* m n d(k,l) 
    //     +     1.00000000000000 i* j* l n d(k,m) 
    //     -     1.00000000000000 i* j* l m d(k,n) 


    // normal-ordered strings:
    //     +     1.00000000000000 d(j,k) d(i,l) 
    //     -     1.00000000000000 l* i d(j,k) 
    //     -     1.00000000000000 d(i,k) d(j,l) 
    //     +     1.00000000000000 l* j d(i,k) 
    //     +     1.00000000000000 k* i d(j,l) 
    //     -     1.00000000000000 k* j d(i,l) 
    //     +     1.00000000000000 k* l* i j 


    // normal-ordered strings:
    //     +     1.00000000000000 i* l d(j,k) 
    //     -     1.00000000000000 i* k* j l 

