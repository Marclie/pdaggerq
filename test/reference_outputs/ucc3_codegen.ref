
def ucc3_energy(t1, t2, f, g, o, v):

#    < 0 | e(-T) H e(T) | 0> :

#	  1.0000 f(i,i)
energy +=  1.000000000000000 * einsum('ii', f[o, o])

#	 -0.5000 <j,i||j,i>
energy += -0.500000000000000 * einsum('jiji', g[o, o, o, o])

#	  1.0000 f(i,a)*t1(a,i)
energy +=  1.000000000000000 * einsum('ia,ai', f[o, v], t1)

#	  1.0000 f(a,i)*t1(a,i)
energy +=  1.000000000000000 * einsum('ai,ai', f[v, o], t1)

#	  0.2500 <j,i||a,b>*t2(a,b,j,i)
energy +=  0.250000000000000 * einsum('jiab,abji', g[o, o, v, v], t2)

#	  0.2500 <b,a||i,j>*t2(a,b,j,i)
energy +=  0.250000000000000 * einsum('baij,abji', g[v, v, o, o], t2)

#	 -0.5000 f(a,i)*t2(b,a,i,j)*t1(b,j)
energy += -0.500000000000000 * einsum('ai,baij,bj', f[v, o], t2, t1, optimize=['einsum_path', (0, 1), (0, 1)])

#	 -0.5000 f(i,a)*t2(a,b,j,i)*t1(b,j)
energy += -0.500000000000000 * einsum('ia,abji,bj', f[o, v], t2, t1, optimize=['einsum_path', (0, 1), (0, 1)])

#	 -0.5000 f(j,i)*t2(b,a,i,k)*t2(a,b,k,j)
energy += -0.500000000000000 * einsum('ji,baik,abkj', f[o, o], t2, t2, optimize=['einsum_path', (1, 2), (0, 1)])

#	  0.5000 f(a,b)*t2(c,a,i,j)*t2(b,c,j,i)
energy +=  0.500000000000000 * einsum('ab,caij,bcji', f[v, v], t2, t2, optimize=['einsum_path', (1, 2), (0, 1)])

#	  0.5000 <k,i||j,i>*t2(b,a,j,l)*t2(a,b,l,k)
energy +=  0.500000000000000 * einsum('kiji,bajl,ablk', g[o, o, o, o], t2, t2, optimize=['einsum_path', (1, 2), (0, 1)])

#	 -0.5000 <j,l||i,l>*t2(b,a,i,k)*t2(a,b,k,j)
energy += -0.500000000000000 * einsum('jlil,baik,abkj', g[o, o, o, o], t2, t2, optimize=['einsum_path', (1, 2), (0, 1)])

#	  0.1250 <l,k||i,j>*t2(b,a,j,i)*t2(a,b,l,k)
energy +=  0.125000000000000 * einsum('lkij,baji,ablk', g[o, o, o, o], t2, t2, optimize=['einsum_path', (0, 1), (0, 1)])

#	  1.0000 <j,a||b,i>*t2(c,a,i,k)*t2(b,c,k,j)
energy +=  1.000000000000000 * einsum('jabi,caik,bckj', g[o, v, v, o], t2, t2, optimize=['einsum_path', (0, 1), (0, 1)])

#	  0.1250 <b,a||c,d>*t2(a,b,i,j)*t2(c,d,j,i)
energy +=  0.125000000000000 * einsum('bacd,abij,cdji', g[v, v, v, v], t2, t2, optimize=['einsum_path', (0, 1), (0, 1)])

return energy


def ucc3_singles_residual(t1, t2, f, g, o, v):

#    < 0 | m* e e(-T) H e(T) | 0> :

#	  1.0000 f(e,m)
singles_res +=  1.000000000000000 * einsum('em->em', f[v, o])

#	 -1.0000 f(i,m)*t1(e,i)
singles_res += -1.000000000000000 * einsum('im,ei->em', f[o, o], t1)

#	  1.0000 f(e,a)*t1(a,m)
singles_res +=  1.000000000000000 * einsum('ea,am->em', f[v, v], t1)

#	 -1.0000 f(i,a)*t2(a,e,m,i)
singles_res += -1.000000000000000 * einsum('ia,aemi->em', f[o, v], t2)

#	 -0.5000 <j,i||a,m>*t2(a,e,j,i)
singles_res += -0.500000000000000 * einsum('jiam,aeji->em', g[o, o, v, o], t2)

#	 -0.5000 <i,e||a,b>*t2(a,b,m,i)
singles_res += -0.500000000000000 * einsum('ieab,abmi->em', g[o, v, v, v], t2)

#	  0.5000 f(a,i)*t2(b,a,i,j)*t2(b,e,m,j)
singles_res +=  0.500000000000000 * einsum('ai,baij,bemj->em', f[v, o], t2, t2, optimize=['einsum_path', (0, 1), (0, 1)])

#	  0.2500 f(a,m)*t2(b,a,i,j)*t2(b,e,j,i)
singles_res +=  0.250000000000000 * einsum('am,baij,beji->em', f[v, o], t2, t2, optimize=['einsum_path', (1, 2), (0, 1)])

#	  0.2500 f(e,i)*t2(b,a,i,j)*t2(a,b,m,j)
singles_res +=  0.250000000000000 * einsum('ei,baij,abmj->em', f[v, o], t2, t2, optimize=['einsum_path', (1, 2), (0, 1)])

return singles_res


def ucc3_doubles_residual(t1, t2, f, g, o, v):

#    < 0 | m* n* f e e(-T) H e(T) | 0> :

#	  1.0000 <e,f||m,n>
doubles_res +=  1.000000000000000 * einsum('efmn->efmn', g[v, v, o, o])

#	 -1.0000 P(m,n)f(i,n)*t2(e,f,m,i)
contracted_intermediate = -1.000000000000000 * einsum('in,efmi->efmn', f[o, o], t2)
doubles_res +=  1.00000 * contracted_intermediate + -1.00000 * einsum('efmn->efnm', contracted_intermediate) 

#	  1.0000 P(e,f)f(e,a)*t2(a,f,m,n)
contracted_intermediate =  1.000000000000000 * einsum('ea,afmn->efmn', f[v, v], t2)
doubles_res +=  1.00000 * contracted_intermediate + -1.00000 * einsum('efmn->femn', contracted_intermediate) 

#	  0.5000 <j,i||m,n>*t2(e,f,j,i)
doubles_res +=  0.500000000000000 * einsum('jimn,efji->efmn', g[o, o, o, o], t2)

#	  1.0000 P(m,n)*P(e,f)<i,e||a,n>*t2(a,f,m,i)
contracted_intermediate =  1.000000000000000 * einsum('iean,afmi->efmn', g[o, v, v, o], t2)
doubles_res +=  1.00000 * contracted_intermediate + -1.00000 * einsum('efmn->efnm', contracted_intermediate)  + -1.00000 * einsum('efmn->femn', contracted_intermediate)  +  1.00000 * einsum('efmn->fenm', contracted_intermediate) 

#	  0.5000 <e,f||a,b>*t2(a,b,m,n)
doubles_res +=  0.500000000000000 * einsum('efab,abmn->efmn', g[v, v, v, v], t2)

return doubles_res

