
/////////////////// PQ GRAPH ///////////////////

Options:
--------
    print_level: 0  // verbosity level:
                    // 0: no printing of optimization steps (default)
                    // 1: print optimization steps without fusion or merging
                    // 2: print optimization steps with fusion and merging
    permute_eri: true  // whether to permute two-electron integrals to common order (default: true)
    no_scalars: false  // whether to skip the scalar terms in the final equations (default: false)
    use_trial_index: false  // whether to store trial vectors as an additional index/dimension for tensors in a sigma-vector build (default: false)
    separate_sigma: false  // whether to separate reusable intermediates for sigma-vector build (default: false)
    opt_level: 0  // optimization level:
                  // 0: no optimization
                  // 1: single-term optimization only (reordering)
                  // 2: reordering and subexpression elimination (substitution)
                  // 3: reordering, substitution, and separation of reusable intermediates (for sigma vectors)
                  // 4: reordering, substitution, and separation; unused intermediates are removed (pruning)
                  // 5: reordering, substitution, separation, pruning, and merging of equivalent terms
                  // 6: reordering, substitution, separation, pruning, merging, and fusion of intermediates (default)
    batched: false  // candidate substitutions are applied in batches rather than one at a time. (default: false)
                   // Generally faster, but may not yield optimal results compared to single substitutions.
    batch_size: 10  // size of the batch for batched substitution (default: 10; -1 for no limit)
    max_temps: -1  // maximum number of intermediates to find (default: -1 for no limit)
    max_depth: -1  // maximum depth for chain of contractions (default: -1 for no limit)
    max_shape: o255v255 // a map of maximum sizes for each line type in an intermediate (default: {o: 255, v: 255}, for no limit.): 
    low_memory: false  // whether to recompute or save all possible permutations of each term in memory (default: false)
                       // if true, permutations are recomputed on the fly. Recommended if memory runs out.
    nthreads: 1  // number of threads to use (default: OMP_NUM_THREADS | available: 1)

Formatting equations for python

Finding scalars... Done
scalars_["1"] = np.einsum('ii,ii->',Id["oo"],f["oo"])
scalars_["2"] = np.einsum('ii,ijij,jj->',Id["oo"],eri["oooo"],Id["oo"],optimize='optimal')
scalars_["3"] = np.einsum('ai,ia->',t1,f["ov"])
scalars_["4"] = np.einsum('ai,ai->',f["vo"],t1)
scalars_["5"] = np.einsum('abji,ijab->',t2,eri["oovv"])
scalars_["6"] = np.einsum('abij,abji->',eri["vvoo"],t2)
scalars_["7"] = np.einsum('ai,aj,ji->',t1,t1,f["oo"],optimize='optimal')
scalars_["8"] = np.einsum('ab,ai,bi->',f["vv"],t1,t1,optimize='optimal')
scalars_["9"] = np.einsum('ai,baij,bj->',f["vo"],t2,t1,optimize='optimal')
scalars_["10"] = np.einsum('abji,bj,ia->',t2,t1,f["ov"],optimize='optimal')
scalars_["11"] = np.einsum('abkj,baik,ji->',t2,t2,f["oo"],optimize='optimal')
scalars_["12"] = np.einsum('bcji,caij,ab->',t2,t2,f["vv"],optimize='optimal')
scalars_["13"] = np.einsum('abkj,jkai,bi->',t2,eri["oovo"],t1,optimize='optimal')
scalars_["14"] = np.einsum('aibc,bcji,aj->',eri["vovv"],t2,t1,optimize='optimal')
scalars_["15"] = np.einsum('akij,baji,bk->',eri["vooo"],t2,t1,optimize='optimal')
scalars_["16"] = np.einsum('abci,abij,cj->',eri["vvvo"],t2,t1,optimize='optimal')
scalars_["17"] = np.einsum('ablk,bajl,ikij,ii->',t2,t2,eri["oooo"],Id["oo"],optimize='optimal')
scalars_["18"] = np.einsum('abkj,baik,jlil,ll->',t2,t2,eri["oooo"],Id["oo"],optimize='optimal')
scalars_["19"] = np.einsum('ablk,baji,klij->',t2,t2,eri["oooo"],optimize='optimal')
scalars_["20"] = np.einsum('ajbi,bckj,caik->',eri["vovo"],t2,t2,optimize='optimal')
scalars_["21"] = np.einsum('abcd,abij,cdji->',eri["vvvv"],t2,t2,optimize='optimal')
scalars_["22"] = np.einsum('bckj,cbik,ai,ja->',t2,t2,t1,f["ov"],optimize='optimal')
scalars_["23"] = np.einsum('ai,cajk,bckj,ib->',t1,t2,t2,f["ov"],optimize='optimal')
scalars_["24"] = np.einsum('bckj,cbik,ai,aj->',t2,t2,f["vo"],t1,optimize='optimal')
scalars_["25"] = np.einsum('ai,cajk,bckj,bi->',f["vo"],t2,t2,t1,optimize='optimal')
scalars_["26"] = np.einsum('ai,caik,bckj,jb->',t1,t2,t2,f["ov"],optimize='optimal')
scalars_["27"] = np.einsum('abji,ia,cbjk,ck->',t2,f["ov"],t2,t1,optimize='optimal')
scalars_["28"] = np.einsum('abji,ka,cbij,ck->',t2,f["ov"],t2,t1,optimize='optimal')
scalars_["29"] = np.einsum('abji,bajk,ck,ic->',t2,t2,t1,f["ov"],optimize='optimal')
scalars_["30"] = np.einsum('ai,baij,bckj,ck->',f["vo"],t2,t2,t1,optimize='optimal')
scalars_["31"] = np.einsum('abji,ikab,cdlk,dcjl->',t2,eri["oovv"],t2,t2,optimize='optimal')
scalars_["32"] = np.einsum('abji,klab,cdlk,dcij->',t2,eri["oovv"],t2,t2,optimize='optimal')
scalars_["33"] = np.einsum('abji,ijac,cdlk,dbkl->',t2,eri["oovv"],t2,t2,optimize='optimal')
scalars_["34"] = np.einsum('abji,dbjl,cdlk,ikac->',t2,t2,t2,eri["oovv"],optimize='optimal')
scalars_["35"] = np.einsum('abji,dbij,cdlk,klac->',t2,t2,t2,eri["oovv"],optimize='optimal')
scalars_["36"] = np.einsum('abji,bakl,cdlk,ijcd->',t2,t2,t2,eri["oovv"],optimize='optimal')
scalars_["37"] = np.einsum('abji,bajl,cdlk,ikcd->',t2,t2,t2,eri["oovv"],optimize='optimal')
scalars_["38"] = np.einsum('abij,abjk,cdlk,dcil->',eri["vvoo"],t2,t2,t2,optimize='optimal')
scalars_["39"] = np.einsum('abij,abkl,cdlk,dcji->',eri["vvoo"],t2,t2,t2,optimize='optimal')
scalars_["40"] = np.einsum('abij,cbji,cdlk,dakl->',eri["vvoo"],t2,t2,t2,optimize='optimal')
scalars_["41"] = np.einsum('abij,cbjk,cdlk,dail->',eri["vvoo"],t2,t2,t2,optimize='optimal')
scalars_["42"] = np.einsum('cdlk,dckl->',t2,t2)
scalars_["43"] = scalars_["42"] * scalars_["5"]
scalars_["44"] = scalars_["42"] * scalars_["6"]
scalars_["45"] = np.einsum('abji,baij->',t2,t2) * np.einsum('cdlk,klcd->',t2,eri["oovv"])
scalars_["46"] = np.einsum('abji,baij->',t2,t2) * np.einsum('cdkl,cdlk->',eri["vvoo"],t2)
scalars_["47"] = np.einsum('abkj,bakl,ji,cdml,dcim->',t2,t2,f["oo"],t2,t2,optimize='optimal')
scalars_["48"] = np.einsum('abkj,balm,ji,cdml,dcik->',t2,t2,f["oo"],t2,t2,optimize='optimal')
scalars_["49"] = np.einsum('abkj,cakl,cdml,dbim,ji->',t2,t2,t2,t2,f["oo"],optimize='optimal')
scalars_["50"] = np.einsum('calm,cdml,abkj,dbik,ji->',t2,t2,t2,t2,f["oo"],optimize='optimal')
scalars_["51"] = np.einsum('cdml,dckl,abkj,baim,ji->',t2,t2,t2,t2,f["oo"],optimize='optimal')
scalars_["52"] = np.einsum('bcji,dcij,ab,delk,eakl->',t2,t2,f["vv"],t2,t2,optimize='optimal')
scalars_["53"] = np.einsum('bcji,dcik,delk,eajl,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
scalars_["54"] = np.einsum('dckl,delk,bcji,eaij,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
scalars_["55"] = np.einsum('delk,edij,bcji,cakl,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
scalars_["56"] = np.einsum('delk,edik,bcji,cajl,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
scalars_["57"] = np.einsum('abji,baij->',t2,t2) * np.einsum('cdml,dckm,lk->',t2,t2,f["oo"],optimize='optimal')
scalars_["58"] = scalars_["12"] * scalars_["42"]
scalars_["59"] = scalars_["11"] * scalars_["42"]

#################### PQ GRAPH Output ####################

##### Declarations #####

## initialize -> Id["oo"];
## initialize -> energy;
## initialize -> eri["oooo"];
## initialize -> eri["oovo"];
## initialize -> eri["oovv"];
## initialize -> eri["vooo"];
## initialize -> eri["vovo"];
## initialize -> eri["vovv"];
## initialize -> eri["vvoo"];
## initialize -> eri["vvvo"];
## initialize -> eri["vvvv"];
## initialize -> f["oo"];
## initialize -> f["ov"];
## initialize -> f["vo"];
## initialize -> f["vv"];
## initialize -> perm_tmps;
## initialize -> t1;
## initialize -> t2;
## initialize -> tmps;

##### Scalars #####

    scalars_["1"]  = 1.00 * np.einsum('ii,ii->',Id["oo"],f["oo"])
    scalars_["2"]  = 1.00 * np.einsum('ii,ijij,jj->',Id["oo"],eri["oooo"],Id["oo"],optimize='optimal')
    scalars_["3"]  = 1.00 * np.einsum('ai,ia->',t1,f["ov"])
    scalars_["4"]  = 1.00 * np.einsum('ai,ai->',f["vo"],t1)
    scalars_["5"]  = 1.00 * np.einsum('ai,aj,ji->',t1,t1,f["oo"],optimize='optimal')
    scalars_["6"]  = 1.00 * np.einsum('ab,ai,bi->',f["vv"],t1,t1,optimize='optimal')
    scalars_["7"]  = 1.00 * np.einsum('ai,baij,bj->',f["vo"],t2,t1,optimize='optimal')
    scalars_["8"]  = 1.00 * np.einsum('abji,bj,ia->',t2,t1,f["ov"],optimize='optimal')
    scalars_["9"]  = 1.00 * np.einsum('abkj,jkai,bi->',t2,eri["oovo"],t1,optimize='optimal')
    scalars_["10"]  = 1.00 * np.einsum('aibc,bcji,aj->',eri["vovv"],t2,t1,optimize='optimal')
    scalars_["11"]  = 1.00 * np.einsum('akij,baji,bk->',eri["vooo"],t2,t1,optimize='optimal')
    scalars_["12"]  = 1.00 * np.einsum('abci,abij,cj->',eri["vvvo"],t2,t1,optimize='optimal')
    scalars_["13"]  = 1.00 * np.einsum('ablk,bajl,ikij,ii->',t2,t2,eri["oooo"],Id["oo"],optimize='optimal')
    scalars_["14"]  = 1.00 * np.einsum('abkj,baik,jlil,ll->',t2,t2,eri["oooo"],Id["oo"],optimize='optimal')
    scalars_["15"]  = 1.00 * np.einsum('ablk,baji,klij->',t2,t2,eri["oooo"],optimize='optimal')
    scalars_["16"]  = 1.00 * np.einsum('ajbi,bckj,caik->',eri["vovo"],t2,t2,optimize='optimal')
    scalars_["17"]  = 1.00 * np.einsum('abcd,abij,cdji->',eri["vvvv"],t2,t2,optimize='optimal')
    scalars_["18"]  = 1.00 * np.einsum('bckj,cbik,ai,ja->',t2,t2,t1,f["ov"],optimize='optimal')
    scalars_["19"]  = 1.00 * np.einsum('ai,cajk,bckj,ib->',t1,t2,t2,f["ov"],optimize='optimal')
    scalars_["20"]  = 1.00 * np.einsum('bckj,cbik,ai,aj->',t2,t2,f["vo"],t1,optimize='optimal')
    scalars_["21"]  = 1.00 * np.einsum('ai,cajk,bckj,bi->',f["vo"],t2,t2,t1,optimize='optimal')
    scalars_["22"]  = 1.00 * np.einsum('ai,caik,bckj,jb->',t1,t2,t2,f["ov"],optimize='optimal')
    scalars_["23"]  = 1.00 * np.einsum('abji,ia,cbjk,ck->',t2,f["ov"],t2,t1,optimize='optimal')
    scalars_["24"]  = 1.00 * np.einsum('abji,ka,cbij,ck->',t2,f["ov"],t2,t1,optimize='optimal')
    scalars_["25"]  = 1.00 * np.einsum('abji,bajk,ck,ic->',t2,t2,t1,f["ov"],optimize='optimal')
    scalars_["26"]  = 1.00 * np.einsum('ai,baij,bckj,ck->',f["vo"],t2,t2,t1,optimize='optimal')
    scalars_["27"]  = 1.00 * np.einsum('abji,ikab,cdlk,dcjl->',t2,eri["oovv"],t2,t2,optimize='optimal')
    scalars_["28"]  = 1.00 * np.einsum('abji,klab,cdlk,dcij->',t2,eri["oovv"],t2,t2,optimize='optimal')
    scalars_["29"]  = 1.00 * np.einsum('abji,ijac,cdlk,dbkl->',t2,eri["oovv"],t2,t2,optimize='optimal')
    scalars_["30"]  = 1.00 * np.einsum('abji,dbjl,cdlk,ikac->',t2,t2,t2,eri["oovv"],optimize='optimal')
    scalars_["31"]  = 1.00 * np.einsum('abji,dbij,cdlk,klac->',t2,t2,t2,eri["oovv"],optimize='optimal')
    scalars_["32"]  = 1.00 * np.einsum('abji,bakl,cdlk,ijcd->',t2,t2,t2,eri["oovv"],optimize='optimal')
    scalars_["33"]  = 1.00 * np.einsum('abji,bajl,cdlk,ikcd->',t2,t2,t2,eri["oovv"],optimize='optimal')
    scalars_["34"]  = 1.00 * np.einsum('abij,abjk,cdlk,dcil->',eri["vvoo"],t2,t2,t2,optimize='optimal')
    scalars_["35"]  = 1.00 * np.einsum('abij,abkl,cdlk,dcji->',eri["vvoo"],t2,t2,t2,optimize='optimal')
    scalars_["36"]  = 1.00 * np.einsum('abij,cbji,cdlk,dakl->',eri["vvoo"],t2,t2,t2,optimize='optimal')
    scalars_["37"]  = 1.00 * np.einsum('abij,cbjk,cdlk,dail->',eri["vvoo"],t2,t2,t2,optimize='optimal')
    scalars_["38"]  = 1.00 * np.einsum('abji,ijab->',t2,eri["oovv"])
    scalars_["39"]  = 1.00 * np.einsum('cdlk,dckl->',t2,t2)
    scalars_["40"]  = 1.00 * scalars_["39"] * scalars_["38"]
    scalars_["41"]  = 1.00 * np.einsum('abij,abji->',eri["vvoo"],t2)
    scalars_["42"]  = 1.00 * scalars_["39"] * scalars_["41"]
    scalars_["43"]  = 1.00 * np.einsum('cdlk,klcd->',t2,eri["oovv"]) * np.einsum('abji,baij->',t2,t2)
    scalars_["44"]  = 1.00 * np.einsum('cdkl,cdlk->',eri["vvoo"],t2) * np.einsum('abji,baij->',t2,t2)
    scalars_["45"]  = 1.00 * np.einsum('abkj,bakl,ji,cdml,dcim->',t2,t2,f["oo"],t2,t2,optimize='optimal')
    scalars_["46"]  = 1.00 * np.einsum('abkj,balm,ji,cdml,dcik->',t2,t2,f["oo"],t2,t2,optimize='optimal')
    scalars_["47"]  = 1.00 * np.einsum('abkj,cakl,cdml,dbim,ji->',t2,t2,t2,t2,f["oo"],optimize='optimal')
    scalars_["48"]  = 1.00 * np.einsum('calm,cdml,abkj,dbik,ji->',t2,t2,t2,t2,f["oo"],optimize='optimal')
    scalars_["49"]  = 1.00 * np.einsum('cdml,dckl,abkj,baim,ji->',t2,t2,t2,t2,f["oo"],optimize='optimal')
    scalars_["50"]  = 1.00 * np.einsum('bcji,dcij,ab,delk,eakl->',t2,t2,f["vv"],t2,t2,optimize='optimal')
    scalars_["51"]  = 1.00 * np.einsum('bcji,dcik,delk,eajl,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
    scalars_["52"]  = 1.00 * np.einsum('dckl,delk,bcji,eaij,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
    scalars_["53"]  = 1.00 * np.einsum('delk,edij,bcji,cakl,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
    scalars_["54"]  = 1.00 * np.einsum('delk,edik,bcji,cajl,ab->',t2,t2,t2,t2,f["vv"],optimize='optimal')
    scalars_["55"]  = 1.00 * np.einsum('cdml,dckm,lk->',t2,t2,f["oo"],optimize='optimal') * np.einsum('abji,baij->',t2,t2)
    scalars_["56"]  = 1.00 * np.einsum('abkj,baik,ji->',t2,t2,f["oo"],optimize='optimal')
    scalars_["57"]  = 1.00 * scalars_["56"] * scalars_["39"]
    scalars_["58"]  = 1.00 * np.einsum('bcji,caij,ab->',t2,t2,f["vv"],optimize='optimal')
    scalars_["59"]  = 1.00 * scalars_["58"] * scalars_["39"]

##### End of Scalars #####

#################### Evaluate Equations ####################

    
    # energy  = +1.00 f(i,i) 
    energy  = 1.00 * scalars_["1"]
    
    # energy += -0.50 <j,i||j,i> 
    energy -= 0.50 * scalars_["2"]
    
    # energy += +1.00 f(i,a) t1(a,i) 
    energy += scalars_["3"]
    
    # energy += +1.00 f(a,i) t1(a,i) 
    energy += scalars_["4"]
    
    # energy += +0.250 <j,i||a,b> t2(a,b,j,i) 
    energy -= 0.250 * scalars_["38"]
    
    # energy += +0.250 <b,a||i,j> t2(a,b,j,i) 
    energy -= 0.250 * scalars_["41"]
    
    # energy += -1.00 f(j,i) t1(a,i) t1(a,j) 
    energy -= scalars_["5"]
    
    # energy += +1.00 f(a,b) t1(a,i) t1(b,i) 
    energy += scalars_["6"]
    
    # energy += -0.50 f(a,i) t2(b,a,i,j) t1(b,j) 
    energy -= 0.50 * scalars_["7"]
    
    # energy += -0.50 f(i,a) t2(a,b,j,i) t1(b,j) 
    energy -= 0.50 * scalars_["8"]
    
    # energy += -0.50 f(j,i) t2(b,a,i,k) t2(a,b,k,j) 
    energy -= 0.50 * scalars_["56"]
    
    # energy += +0.50 f(a,b) t2(c,a,i,j) t2(b,c,j,i) 
    energy += 0.50 * scalars_["58"]
    
    # energy += -0.50 <k,j||a,i> t2(a,b,k,j) t1(b,i) 
    energy += 0.50 * scalars_["9"]
    
    # energy += -0.50 <i,a||b,c> t1(a,j) t2(b,c,j,i) 
    energy += 0.50 * scalars_["10"]
    
    # energy += +0.50 <k,a||i,j> t2(b,a,j,i) t1(b,k) 
    energy -= 0.50 * scalars_["11"]
    
    # energy += +0.50 <b,a||c,i> t2(a,b,i,j) t1(c,j) 
    energy -= 0.50 * scalars_["12"]
    
    # energy += +0.50 <k,i||j,i> t2(b,a,j,l) t2(a,b,l,k) 
    energy += 0.50 * scalars_["13"]
    
    # energy += -0.50 <j,l||i,l> t2(b,a,i,k) t2(a,b,k,j) 
    energy -= 0.50 * scalars_["14"]
    
    # energy += +0.1250 <l,k||i,j> t2(b,a,j,i) t2(a,b,l,k) 
    energy -= 0.1250 * scalars_["15"]
    
    # energy += +1.00 <j,a||b,i> t2(c,a,i,k) t2(b,c,k,j) 
    energy -= scalars_["16"]
    
    # energy += +0.1250 <b,a||c,d> t2(a,b,i,j) t2(c,d,j,i) 
    energy -= 0.1250 * scalars_["17"]
    
    # energy += -0.1666667 f(j,a) t1(a,i) t2(c,b,i,k) t2(b,c,k,j) 
    energy -= 0.1666667 * scalars_["18"]
    
    # energy += -0.1666667 f(i,b) t2(c,a,j,k) t1(a,i) t2(b,c,k,j) 
    energy -= 0.1666667 * scalars_["19"]
    
    # energy += -0.3333333 f(a,i) t1(a,j) t2(c,b,i,k) t2(b,c,k,j) 
    energy -= 0.3333333 * scalars_["20"]
    
    # energy += -0.3333333 f(a,i) t2(c,a,j,k) t2(b,c,k,j) t1(b,i) 
    energy -= 0.3333333 * scalars_["21"]
    
    # energy += -0.1666667 f(j,b) t2(c,a,i,k) t1(a,i) t2(b,c,k,j) 
    energy -= 0.1666667 * scalars_["22"]
    
    # energy += +0.3333333 f(i,a) t2(a,b,j,i) t2(c,b,j,k) t1(c,k) 
    energy += 0.3333333 * scalars_["23"]
    
    # energy += +0.1666667 f(k,a) t2(a,b,j,i) t2(c,b,i,j) t1(c,k) 
    energy += 0.1666667 * scalars_["24"]
    
    # energy += +0.1666667 f(i,c) t2(a,b,j,i) t2(b,a,j,k) t1(c,k) 
    energy += 0.1666667 * scalars_["25"]
    
    # energy += +0.1666667 f(a,i) t2(b,a,i,j) t2(b,c,k,j) t1(c,k) 
    energy += 0.1666667 * scalars_["26"]
    
    # energy += -0.0833333 <k,i||a,b> t2(a,b,j,i) t2(d,c,j,l) t2(c,d,l,k) 
    energy += 0.0833333 * scalars_["27"]
    
    # energy += +0.0208333 <l,k||a,b> t2(a,b,j,i) t2(d,c,i,j) t2(c,d,l,k) 
    energy -= 0.0208333 * scalars_["28"]
    
    # energy += -0.0833333 <j,i||a,c> t2(a,b,j,i) t2(d,b,k,l) t2(c,d,l,k) 
    energy += 0.0833333 * scalars_["29"]
    
    # energy += +0.3333333 <k,i||a,c> t2(a,b,j,i) t2(d,b,j,l) t2(c,d,l,k) 
    energy -= 0.3333333 * scalars_["30"]
    
    # energy += -0.0833333 <l,k||a,c> t2(a,b,j,i) t2(d,b,i,j) t2(c,d,l,k) 
    energy += 0.0833333 * scalars_["31"]
    
    # energy += +0.0208333 <j,i||c,d> t2(a,b,j,i) t2(b,a,k,l) t2(c,d,l,k) 
    energy -= 0.0208333 * scalars_["32"]
    
    # energy += -0.0833333 <k,i||c,d> t2(a,b,j,i) t2(b,a,j,l) t2(c,d,l,k) 
    energy += 0.0833333 * scalars_["33"]
    
    # energy += -0.1666667 <b,a||i,j> t2(a,b,j,k) t2(d,c,i,l) t2(c,d,l,k) 
    energy += 0.1666667 * scalars_["34"]
    
    # energy += +0.0416667 <b,a||i,j> t2(a,b,k,l) t2(d,c,j,i) t2(c,d,l,k) 
    energy -= 0.0416667 * scalars_["35"]
    
    # energy += -0.1666667 <b,a||i,j> t2(d,a,k,l) t2(c,b,j,i) t2(c,d,l,k) 
    energy += 0.1666667 * scalars_["36"]
    
    # energy += +0.3333333 <b,a||i,j> t2(d,a,i,l) t2(c,b,j,k) t2(c,d,l,k) 
    energy -= 0.3333333 * scalars_["37"]
    
    # energy += +0.0104167 <j,i||a,b> t2(a,b,j,i) t2(d,c,k,l) t2(c,d,l,k) 
    energy -= 0.0104167 * scalars_["40"]
    
    # energy += +0.0104167 <b,a||i,j> t2(a,b,j,i) t2(d,c,k,l) t2(c,d,l,k) 
    energy -= 0.0104167 * scalars_["42"]
    
    # energy += -0.0104167 <l,k||c,d> t2(b,a,i,j) t2(a,b,j,i) t2(c,d,l,k) 
    energy += 0.0104167 * scalars_["43"]
    
    # energy += -0.0104167 <d,c||k,l> t2(b,a,i,j) t2(a,b,j,i) t2(c,d,l,k) 
    energy += 0.0104167 * scalars_["44"]
    
    # energy += -0.0833333 f(j,i) t2(a,b,k,j) t2(b,a,k,l) t2(d,c,i,m) t2(c,d,m,l) 
    energy -= 0.0833333 * scalars_["45"]
    
    # energy += -0.0416667 f(j,i) t2(a,b,k,j) t2(b,a,l,m) t2(d,c,i,k) t2(c,d,m,l) 
    energy -= 0.0416667 * scalars_["46"]
    
    # energy += +0.3333333 f(j,i) t2(a,b,k,j) t2(c,a,k,l) t2(d,b,i,m) t2(c,d,m,l) 
    energy += 0.3333333 * scalars_["47"]
    
    # energy += +0.1666667 f(j,i) t2(a,b,k,j) t2(c,a,l,m) t2(d,b,i,k) t2(c,d,m,l) 
    energy += 0.1666667 * scalars_["48"]
    
    # energy += -0.0833333 f(j,i) t2(b,a,i,m) t2(a,b,k,j) t2(d,c,k,l) t2(c,d,m,l) 
    energy -= 0.0833333 * scalars_["49"]
    
    # energy += +0.0833333 f(a,b) t2(e,a,k,l) t2(b,c,j,i) t2(d,c,i,j) t2(d,e,l,k) 
    energy += 0.0833333 * scalars_["50"]
    
    # energy += -0.3333333 f(a,b) t2(e,a,j,l) t2(b,c,j,i) t2(d,c,i,k) t2(d,e,l,k) 
    energy -= 0.3333333 * scalars_["51"]
    
    # energy += +0.0833333 f(a,b) t2(e,a,i,j) t2(b,c,j,i) t2(d,c,k,l) t2(d,e,l,k) 
    energy += 0.0833333 * scalars_["52"]
    
    # energy += +0.0416667 f(a,b) t2(c,a,k,l) t2(b,c,j,i) t2(e,d,i,j) t2(d,e,l,k) 
    energy += 0.0416667 * scalars_["53"]
    
    # energy += -0.1666667 f(a,b) t2(c,a,j,l) t2(b,c,j,i) t2(e,d,i,k) t2(d,e,l,k) 
    energy -= 0.1666667 * scalars_["54"]
    
    # energy += +0.0208333 f(l,k) t2(b,a,i,j) t2(a,b,j,i) t2(d,c,k,m) t2(c,d,m,l) 
    energy += 0.0208333 * scalars_["55"]
    
    # energy += -0.0208333 f(c,d) t2(b,a,i,j) t2(a,b,j,i) t2(e,c,k,l) t2(d,e,l,k) 
    energy -= 0.0208333 * scalars_["59"]
    
    # energy += -0.0208333 f(j,i) t2(b,a,i,k) t2(a,b,k,j) t2(d,c,l,m) t2(c,d,m,l) 
    energy -= 0.0208333 * scalars_["57"]
    
    # energy += +0.0208333 f(a,b) t2(c,a,i,j) t2(b,c,j,i) t2(e,d,k,l) t2(d,e,l,k) 
    energy += 0.0208333 * scalars_["59"]

############################################################



def ucc4_energy(t1, t2, f, g, o, v):

#    < 0 | e(-T) H e(T) | 0> :

return energy

